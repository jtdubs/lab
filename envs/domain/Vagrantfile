# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.define "dc" do |box|
    box.vm.box = "ws19core-updated"
    box.vm.hostname = "dc"
    box.vm.network "private_network", ip: "192.168.64.8"
    box.vm.network "forwarded_port", guest: 3389, host: 33389, auto_correct: true
    box.vm.synced_folder ".", "/vagrant", disabled: true
    box.vm.communicator = "winrm"
    box.winrm.password = "vagrant"
    box.winrm.username = "vagrant"
    box.winrm.transport = :plaintext
    box.winrm.basic_auth_only = true

    box.vm.provider "virtualbox" do |provider|
      provider.linked_clone = true
      provider.cpus = "2"
      provider.memory = "4096"
    end

    # sysprep to give us a unique machine RID
    box.vm.provision "windows-sysprep"

    # setup active directory
    box.vm.provision "shell", name: "forest", path: "scripts/Create-AD-Forest.ps1", reboot: true
    box.vm.provision "shell", name: "dc",     path: "scripts/Configure-DC.ps1"
    box.vm.provision "shell", name: "share",  path: "scripts/Create-Domain-Share.ps1"
    box.vm.provision "shell", name: "ca",     path: "scripts/Configure-CA.ps1"
    box.vm.provision "shell", name: "users",  path: "scripts/Create-Domain-Users.ps1"
    box.vm.provision "shell", name: "kds",    path: "scripts/Configure-KDS.ps1"

    # fix time after resumes
    box.trigger.after :resume do |trigger|
      trigger.info = "Updating time"
      trigger.run_remote = {
        inline: "powershell.exe Restart-Service w32time"
      }
    end
  end

  config.vm.define "web" do |box|
    box.vm.box = "ws19core-updated"
    box.vm.hostname = "web"
    box.vm.network "private_network", ip: "192.168.64.16"
    box.vm.network "forwarded_port", guest: 3389, host: 23389, auto_correct: true
    box.vm.synced_folder ".", "/vagrant", disabled: true
    box.vm.communicator = "winrm"
    box.winrm.password = "vagrant"
    box.winrm.username = "vagrant"

    box.vm.provider "virtualbox" do |provider|
      provider.linked_clone = true
      provider.cpus = "2"
      provider.memory = "4096"
    end

    # sysprep to give us a unique machine RID
    box.vm.provision "windows-sysprep"

    # join domain
    box.vm.provision "shell", name: "join", path: "scripts/Configure-Domain-Server.ps1", reboot: true

    # fix time after resumes
    box.trigger.after :resume do |trigger|
      trigger.info = "Updating time"
      trigger.run_remote = {
        inline: "powershell.exe Restart-Service w32time"
      }
    end
  end

  config.vm.define "user" do |box|
    box.vm.box = "win10-updated"
    box.vm.hostname = "user"
    box.vm.network "private_network", ip: "192.168.64.32"
    box.vm.network "forwarded_port", guest: 3389, host: 13389, auto_correct: true
    box.vm.synced_folder ".", "/vagrant", disabled: true
    box.vm.communicator = "winrm"
    box.winrm.password = "vagrant"
    box.winrm.username = "vagrant"

    box.vm.provider "virtualbox" do |provider|
      provider.linked_clone = true
      provider.cpus = "2"
      provider.memory = "4096"
    end

    # sysprep to give us a unique machine RID
    box.vm.provision "windows-sysprep"

    # join domain
    box.vm.provision "shell", name: "join", path: "scripts/Configure-Domain-Workstation.ps1", reboot: true

    # fix time after resumes
    box.trigger.after :resume do |trigger|
      trigger.info = "Updating time"
      trigger.run_remote = {
        inline: "powershell.exe Restart-Service w32time"
      }
    end
  end

  config.vm.define "dev" do |box|
    box.vm.box = "ubuntu-updated"
    box.vm.hostname = "dev"
    box.vm.network "private_network", ip: "192.168.64.33"
    box.vm.synced_folder ".", "/vagrant", disabled: true
    box.vm.communicator = "ssh"
    box.ssh.username = "vagrant"
    box.ssh.private_key_path = "../../vagrant.id_rsa"

    box.vm.provider "virtualbox" do |provider|
      provider.linked_clone = true
      provider.cpus = "2"
      provider.memory = "4096"
    end

    # join domain
    box.vm.provision "shell", name: "join", path: "scripts/join-domain.sh"

    # fix time after resumes
    box.trigger.after :resume do |trigger|
      trigger.info = "Updating time"
      trigger.run_remote = {
        inline: "sudo systemctl restart systemd-timesyncd"
      }
    end
  end

  config.vm.define "hacker" do |box|
    box.vm.box = "kali-updated"
    box.vm.hostname = "hacker"
    box.vm.network "private_network", ip: "192.168.64.33"
    box.vm.synced_folder ".", "/vagrant", disabled: true
    box.vm.communicator = "ssh"
    box.ssh.username = "vagrant"
    box.ssh.private_key_path = "../../vagrant.id_rsa"

    box.vm.provider "virtualbox" do |provider|
      provider.linked_clone = true
      provider.cpus = "4"
      provider.memory = "8192"
    end

    # install tools and setup environment
    box.vm.provision "shell", name: "setup", path: "scripts/setup-hacker.sh", privileged: false

    # fix time after resumes
    box.trigger.after :resume do |trigger|
      trigger.info = "Updating time"
      trigger.run_remote = {
        inline: "sudo systemctl restart systemd-timesyncd"
      }
    end
  end
end
